/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <3 3>;
            then-layer = <7>;
        };
    };

    combos {
        compatible = "zmk,combos";

        enter {
            bindings = <&kp ENTER>;
            key-positions = <27 28>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <25 26>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <14 15>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <15 16>;
        };

        n {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <38 39>;
        };

        r {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <39 40>;
        };

        d {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <13 14>;
        };

        s {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <37 38>;
        };

        rtv {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <37 39>;
        };

        rtvl {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <37 40>;
        };
    };

    behaviors {
        hold_tap_layer: hold_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        hold_tap_toggle: hold_tap_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_TOGGLE";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        hold_tap_scroll: hold_tap_scroll {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_SCROLL";
            bindings = <&msc>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4      &kp N5                                                  &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8  &kp N9           &kp N0       &kp PRINTSCREEN
&kp TAB       &kp B         &kp L         &kp D             &kp C             &kp V                                                   &kp J          &kp F         &kp O         &kp U            &kp COMMA    &kp MINUS
&kp LEFT_ALT  &mt LCTRL N   &kp R         &mt LEFT_SHIFT T  &mt LEFT_SHIFT S  &kp G                                                   &kp Y          &kp H         &kp A         &mt RIGHT_ALT E  &mt RCTRL I  &kp SLASH
&none         &kp Q         &kp X         &kp M             &kp W             &kp Z                    &kp K_MUTE       &none         &kp K          &kp P         &kp SQT       &kp SEMICOLON    &kp PERIOD   &kp BACKSLASH
                            &none         &none             &mo 3             &hold_tap_layer 1 SPACE  &kp BACKSPACE    &kp LEFT_GUI  &kp BACKSPACE  &mo 4         &none         &tog 2
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        one_hand_layer {
            bindings = <
&trans           &kp N0       &kp N9          &kp NUMBER_8      &kp NUMBER_6      &kp NUMBER_5                    &trans  &trans  &trans  &trans  &trans  &trans
&kp MINUS        &kp COMMA    &kp U           &kp O             &kp F             &kp J                           &trans  &trans  &trans  &trans  &trans  &trans
&mt LCTRL SLASH  &mt LCTRL I  &mt LEFT_ALT E  &mt LEFT_SHIFT A  &mt LEFT_SHIFT H  &kp Y                           &trans  &trans  &trans  &trans  &trans  &trans
&kp BSLH         &kp DOT      &kp SEMI        &kp APOS          &kp P             &kp K         &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                              &trans          &trans            &none             &trans        &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "One_Hand";
        };

        QWETY_layer {
            bindings = <
&kp CAPS   &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                                            &kp N6         &kp N7  &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W     &kp E     &kp R      &kp T                                             &kp Y          &kp U   &kp I      &kp O    &kp P     &kp LBKT
&kp LSHFT  &kp A   &kp S     &kp D     &kp F      &kp G                                             &kp H          &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&kp ESC    &kp Z   &kp X     &kp C     &kp V      &kp B                    &kp C_MUTE    &trans     &kp N          &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp GRAVE
                   &kp LGUI  &kp LALT  &kp LCTRL  &hold_tap_layer 3 SPACE  &kp ENTER     &kp SPACE  &kp BACKSPACE  &mo 4   &trans     &trans
            >;

            label = "QWETY";
            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&sys_reset   &kp F1       &kp F2        &kp F3        &kp F4        &kp F5                         &none   &none  &none  &none  &none  &sys_reset
&none        &kp KP_PLUS  &kp N7        &kp NUMBER_8  &kp N9        &kp ASTERISK                   &none   &none  &none  &none  &none  &none
&kp CAPS     &kp MINUS    &kp N4        &kp NUMBER_5  &kp NUMBER_6  &kp KP_DIVIDE                  &none   &none  &none  &none  &none  &none
&bootloader  &kp EQUAL    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none          &none    &none  &none   &none  &none  &none  &none  &bootloader
                          &kp N0        &none         &trans        &trans         &none    &none  &trans  &none  &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            bindings = <
&trans        &kp F6          &kp F7          &kp F8           &kp F9      &kp F10                    &trans  &trans  &trans  &trans  &trans  &trans
&trans        &kp F11         &kp F12         &kp UP_ARROW     &kp LEFT    &trans                     &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_ALT  &kp LEFT_SHIFT  &kp LCTRL       &kp DOWN         &kp RIGHT   &none                      &trans  &trans  &trans  &trans  &trans  &trans
&trans        &msc SCRL_UP    &msc SCRL_DOWN  &kp PRINTSCREEN  &kp DELETE  &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                              &trans          &trans           &trans      &trans   &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "raise";
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &none  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none  &none  &none  &none
            >;
        };
    };
};
